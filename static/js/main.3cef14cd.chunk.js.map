{"version":3,"sources":["Componenets/Charts/Types/RadarType.jsx","Componenets/Charts/Types/LineType.jsx","Componenets/Charts/Types/BarType.jsx","Componenets/Charts/Charts.jsx","Componenets/Grid/GridView.jsx","Componenets/Sidemenu/SideMenu.jsx","Componenets/NavBar/Navbar.jsx","Componenets/Dashboard/Dashboard.jsx","App.js","serviceWorker.js","index.js"],"names":["data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","options","maintainAspectRatio","responsive","RadarType","props","state","console","log","Component","Array","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","LineType","column_names","chartdata","forEach","element","includes","push","BarType","Charts","error","isLoaded","columns","key","toLowerCase","fetch","then","res","json","result","setState","dataset","this","message","className","renderSwitch","chartype","React","GridView","classes","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Grid","container","item","xs","Paper","selectedtype","SideMenu","charttype","selected","type","onSelect","onchangecharttype","Toggle","Nav","defaultSelected","eventKey","style","fontSize","Navbar","class","id","Dashboard","onchangetype","bind","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3cef14cd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Radar } from \"react-chartjs-2\";\r\n\r\nconst data = {\r\n  labels: [\r\n    \"Eating\",\r\n    \"Drinking\",\r\n    \"Sleeping\",\r\n    \"Designing\",\r\n    \"Coding\",\r\n    \"Cycling\",\r\n    \"Running\"\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      backgroundColor: \"rgba(179,181,198,0.2)\",\r\n      borderColor: \"rgba(179,181,198,1)\",\r\n      pointBackgroundColor: \"rgba(179,181,198,1)\",\r\n      pointBorderColor: \"#fff\",\r\n      pointHoverBackgroundColor: \"#fff\",\r\n      pointHoverBorderColor: \"rgba(179,181,198,1)\",\r\n      data: [65, 59, 90, 81, 56, 55, 40]\r\n    },\r\n    {\r\n      label: \"My Second dataset\",\r\n      backgroundColor: \"rgba(255,99,132,0.2)\",\r\n      borderColor: \"rgba(255,99,132,1)\",\r\n      pointBackgroundColor: \"rgba(255,99,132,1)\",\r\n      pointBorderColor: \"#fff\",\r\n      pointHoverBackgroundColor: \"#fff\",\r\n      pointHoverBorderColor: \"rgba(255,99,132,1)\",\r\n      data: [28, 48, 40, 19, 96, 27, 100]\r\n    }\r\n  ]\r\n};\r\n\r\nconst options = {\r\n  maintainAspectRatio: false,\t// Don't maintain w/h ratio\r\n responsive :true\r\n};\r\n\r\nclass RadarType extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    console.log(props);\r\n  }\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Radar Example</h2>\r\n        <Radar data={data} \r\n        options={options} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RadarType;\r\n","import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst data = {\r\n  labels: new Array(),\r\n  datasets: [\r\n    {\r\n      label: \"one\",\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: \"rgba(75,192,192,0.4)\",\r\n      borderColor: \"rgba(224, 130, 131, 1)\",\r\n      borderCapStyle: \"butt\",\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: \"miter\",\r\n      pointBorderColor: \"rgba(207, 0, 15, 1)\",\r\n      pointBackgroundColor: \"#fff\",\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: \"rgba(207, 0, 15, 1)\",\r\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: new Array()\r\n    },\r\n    {\r\n      label: \"two\",\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: \"rgba(75,192,192,0.4)\",\r\n      borderColor: \"rgba(137, 196, 244, 1)\",\r\n      borderCapStyle: \"butt\",\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: \"miter\",\r\n      pointBorderColor: \"rgba(77, 19, 209, 1)\",\r\n      pointBackgroundColor: \"#fff\",\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: \"rgba(77, 19, 209, 1)\",\r\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: new Array()\r\n    },\r\n    {\r\n      label: \"three\",\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: \"rgba(75,192,192,0.4)\",\r\n      borderColor: \"rgba(123, 239, 178, 1)\",\r\n      borderCapStyle: \"butt\",\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: \"miter\",\r\n      pointBorderColor: \"rgba(30, 130, 76, 1)\",\r\n      pointBackgroundColor: \"#fff\",\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: \"rgba(30, 130, 76, 1)\",\r\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: new Array()\r\n    },\r\n    {\r\n      label: \"four\",\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: \"rgba(75,192,192,0.4)\",\r\n      borderColor: \"rgba(75,192,192,1)\",\r\n      borderCapStyle: \"butt\",\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: \"miter\",\r\n      pointBorderColor: \"rgba(75,192,192,1)\",\r\n      pointBackgroundColor: \"#fff\",\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: new Array()\r\n    }\r\n    \r\n  ]\r\n};\r\nconst options = {\r\n  maintainAspectRatio: false,\t// Don't maintain w/h ratio\r\n responsive :true\r\n};\r\n\r\nclass LineType extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    data.datasets[0].label = this.props.column_names[1];\r\n    data.datasets[1].label = this.props.column_names[2];\r\n    data.datasets[2].label = this.props.column_names[3];\r\n    data.datasets[3].label = this.props.column_names[4];\r\n\r\n    this.props.chartdata.forEach(element => {\r\n      if (element[0].includes(\"2020\")) {\r\n        data.labels.push(element[0]);\r\n        data.datasets[0].data.push(element[1]);\r\n        data.datasets[1].data.push(element[2]);\r\n        data.datasets[2].data.push(element[3]);\r\n        data.datasets[3].data.push(element[4]);\r\n      }\r\n    });\r\n  }\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Line Example</h2>\r\n        <Line data={data}  options={options}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineType;\r\n","import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst data = {\r\n  labels: new Array(),\r\n  datasets: [\r\n    {\r\n      label: \"one\",\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: \"rgba(75,192,192,0.4)\",\r\n      borderColor: \"rgba(224, 130, 131, 1)\",\r\n      borderCapStyle: \"butt\",\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: \"miter\",\r\n      pointBorderColor: \"rgba(207, 0, 15, 1)\",\r\n      pointBackgroundColor: \"#fff\",\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: \"rgba(207, 0, 15, 1)\",\r\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: new Array()\r\n    },\r\n    {\r\n      label: \"two\",\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: \"rgba(75,192,192,0.4)\",\r\n      borderColor: \"rgba(137, 196, 244, 1)\",\r\n      borderCapStyle: \"butt\",\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: \"miter\",\r\n      pointBorderColor: \"rgba(77, 19, 209, 1)\",\r\n      pointBackgroundColor: \"#fff\",\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: \"rgba(77, 19, 209, 1)\",\r\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: new Array()\r\n    },\r\n    {\r\n      label: \"three\",\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: \"rgba(75,192,192,0.4)\",\r\n      borderColor: \"rgba(123, 239, 178, 1)\",\r\n      borderCapStyle: \"butt\",\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: \"miter\",\r\n      pointBorderColor: \"rgba(30, 130, 76, 1)\",\r\n      pointBackgroundColor: \"#fff\",\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: \"rgba(30, 130, 76, 1)\",\r\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: new Array()\r\n    },\r\n    {\r\n      label: \"four\",\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: \"rgba(75,192,192,0.4)\",\r\n      borderColor: \"rgba(75,192,192,1)\",\r\n      borderCapStyle: \"butt\",\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: \"miter\",\r\n      pointBorderColor: \"rgba(75,192,192,1)\",\r\n      pointBackgroundColor: \"#fff\",\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: new Array()\r\n    }\r\n    \r\n  ]\r\n};\r\nconst options = {\r\n  maintainAspectRatio: false,\t// Don't maintain w/h ratio\r\n responsive :true\r\n};\r\n\r\nclass BarType extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    data.datasets[0].label = this.props.column_names[1];\r\n    data.datasets[1].label = this.props.column_names[2];\r\n    data.datasets[2].label = this.props.column_names[3];\r\n    data.datasets[3].label = this.props.column_names[4];\r\n\r\n    this.props.chartdata.forEach(element => {\r\n      if (element[0].includes(\"2020-09\")) {\r\n        data.labels.push(element[0]);\r\n        data.datasets[0].data.push(element[1]);\r\n        data.datasets[1].data.push(element[2]);\r\n        data.datasets[2].data.push(element[3]);\r\n        data.datasets[3].data.push(element[4]);\r\n      }\r\n    });\r\n  }\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h2>Bar Example (custom size)</h2>\r\n      <Bar\r\n        data={data}\r\n       \r\n        options={options}\r\n      />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarType;\r\n","import React, { Component } from \"react\";\r\nimport RadarType from \"./Types/RadarType\";\r\n\r\nimport LineType from \"./Types/LineType\";\r\nimport BarType from \"./Types/BarType\";\r\n// export default Charts;\r\nclass Charts extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      columns: [],\r\n      datasets: []\r\n    };\r\n    console.log(props)\r\n  }\r\n\r\n   renderSwitch(key,datasets,columns) {\r\n    switch (key.toLowerCase()) {\r\n      case \"charts/radarchart\":\r\n        return (<div><RadarType chartdata={datasets} column_names={columns}></RadarType><hr></hr></div>);\r\n      \r\n      case \"charts/linechart\":\r\n        return (<div><LineType chartdata={datasets} column_names={columns}></LineType><hr></hr></div>);\r\n      case \"charts/barchart\":\r\n        return (<div><BarType chartdata={datasets} column_names={columns}></BarType><hr></hr></div>);\r\n     default:\r\n          return (<div><RadarType chartdata={datasets} column_names={columns}></RadarType><hr></hr></div>);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://www.quandl.com/api/v3/datasets/FSE/EON_X.json?api_key=TCZnxxn3DzyPRHJ9Zvkf\"\r\n    )\r\n      .then(res => res.json())\r\n      .then(\r\n        result => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            columns: result.dataset.column_names,\r\n            datasets: result.dataset.data\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        error => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, columns, datasets } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        \r\n        <div className=\"main\"> {this.renderSwitch(this.props.chartype,datasets,columns)} </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n}\r\nexport default Charts;\r\n","import React, { Component, useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Charts from \"../Charts/Charts\";\r\n\r\nclass GridView extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    console.log(props)\r\n  }\r\n  render() {\r\n    let useStyles = makeStyles(theme => ({\r\n      root: {\r\n        flexGrow: 1\r\n      },\r\n      paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: \"center\",\r\n        color: theme.palette.text.secondary\r\n      }\r\n    }));\r\n\r\n    let classes = useStyles;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <Charts chartype={this.props.selectedtype}></Charts>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridView;\r\n","import React, { Component } from \"react\";\r\nimport \"../Sidemenu/SideMeun.scss\";\r\nimport SideNav, {  Toggle,  Nav,  NavItem,  NavIcon,  NavText} from \"@trendmicro/react-sidenav\";\r\n\r\n \r\n\r\n// Be sure to include styles at some point, probably during your bootstraping\r\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\r\n\r\nclass SideMenu extends Component {\r\n  constructor(props){\r\n    super (props);\r\n    this.state={\r\n      charttype : \"radar\"\r\n    }\r\n  } \r\n\r\n  onchangecharttype(selected){\r\n    this.props.type(selected);\r\n    console.log(selected)\r\n  }\r\n  render() {\r\n    return (\r\n      <SideNav className =\"pos\" onSelect={ selected => {this.onchangecharttype(selected)}}      >\r\n        <SideNav.Toggle />\r\n        <SideNav.Nav defaultSelected=\"home\">\r\n          <NavItem eventKey=\"home\">  \r\n            <NavIcon>\r\n              <i className=\"fa fa-fw fa-home\" style={{ fontSize: \"1.75em\" }} />\r\n            </NavIcon>\r\n            <NavText>Home</NavText>\r\n          </NavItem>\r\n          <NavItem eventKey=\"charts\">\r\n            \r\n            <NavIcon> <i className=\"fa fa-fw fa-line-chart\" style={{ fontSize: \"1.75em\" }} />\r\n            </NavIcon>\r\n            <NavText>Charts</NavText>\r\n            <NavItem eventKey=\"charts/Radarchart\">\r\n              <NavText>Radar Chart</NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"charts/linechart\">\r\n              <NavText>Line Chart</NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"charts/barchart\">\r\n              <NavText>Bar Chart</NavText>\r\n            </NavItem>\r\n          </NavItem>\r\n        </SideNav.Nav>\r\n      </SideNav>\r\n      // <div class=\"bg-light border-right sidebar \" id=\"sidebar-wrapper\">\r\n      //   <div class=\"sidebar-heading  alingment\">\r\n      //     <ul>\r\n      //       <li className=\"heading\">\r\n      //         Radar\r\n      //       </li>\r\n      //     </ul>\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React, { Component } from \"react\";\r\nimport \"./Navbar.scss\";\r\n\r\nclass Navbar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light border-bottom\">\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <h3 class=\"heading\">Javascript charting Library</h3>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./Dashboard.scss\";\r\nimport GridView from \"../Grid/GridView\";\r\nimport SideMenu from \"../Sidemenu/SideMenu\";\r\nimport Navbar from \"../NavBar/Navbar\";\r\n\r\nclass Dashboard extends Component {\r\n constructor(){\r\n   super ();\r\n   this.state = {    type : \"\"};\r\n }\r\n  onchangetype= (type) => {\r\n    this.setState({\r\n      type : type\r\n    })\r\n  }\r\n  render() {\r\n   \r\n    return (\r\n      <div class=\"d-flex\" id=\"wrapper\">\r\n        <SideMenu type= {this.onchangetype.bind(this)}/>\r\n\r\n        <div class=\"alignment\" id=\"page-content-wrapper\">\r\n          <Navbar />\r\n          <div class=\"container-fluid gridsetting \"> <GridView selectedtype={this.state.type}/> </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport Dashboard from './Componenets/Dashboard/Dashboard';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Dashboard />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport '@fortawesome/free-solid-svg-icons';\r\nimport '@fortawesome/fontawesome-svg-core';\r\nimport '@fortawesome/free-brands-svg-icons';\r\nimport '@fortawesome/free-regular-svg-icons';\r\nimport 'font-awesome/css/font-awesome.min.css'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <script src='https://use.fontawesome.com/3bd7769ce1.js'></script>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n "],"sourceRoot":""}